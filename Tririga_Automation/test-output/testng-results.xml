<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="0" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Tririga Automation Regression" duration-ms="26074" started-at="2020-01-02T18:02:18Z" finished-at="2020-01-02T18:02:44Z">
    <groups>
    </groups>
    <test name="TEST" duration-ms="26074" started-at="2020-01-02T18:02:18Z" finished-at="2020-01-02T18:02:44Z">
      <class name="Tririga_TestScriptsPkg.Expire_An_ExistingLease_DueExpiration_Today">
        <test-method status="PASS" signature="beforeSuite(java.lang.String)[pri:0, instance:Tririga_TestScriptsPkg.Expire_An_ExistingLease_DueExpiration_Today@7642df8f]" name="beforeSuite" is-config="true" duration-ms="157" started-at="2020-01-02T18:02:18Z" finished-at="2020-01-02T18:02:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://shell-test.tririga.com/index.html]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:Tririga_TestScriptsPkg.Expire_An_ExistingLease_DueExpiration_Today@7642df8f]" name="beforeMethod" is-config="true" duration-ms="17809" started-at="2020-01-02T18:02:18Z" finished-at="2020-01-02T18:02:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Tririga_TestScriptsPkg.Expire_An_ExistingLease_DueExpiration_Today.AddLandBuildingUnderBuilding(java.util.Hashtable,java.lang.reflect.Method) throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="AddLandBuildingUnderBuilding(java.util.Hashtable, java.lang.reflect.Method)[pri:0, instance:Tririga_TestScriptsPkg.Expire_An_ExistingLease_DueExpiration_Today@7642df8f]" name="AddLandBuildingUnderBuilding" duration-ms="451" started-at="2020-01-02T18:02:36Z" description="Expire an existing lease due expiration today, voiding the associated active payment schedules but keeping the Contract Status as &#039;Active&#039;." data-provider="getData" finished-at="2020-01-02T18:02:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Username=PAtester1, LEASEID=, Password=password, Runmode=Y, LEASETYPE=Expense Lease}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Tririga_TestScriptsPkg.Expire_An_ExistingLease_DueExpiration_Today.AddLandBuildingUnderBuilding(java.util.Hashtable,java.lang.reflect.Method) throws java.lang.InterruptedException,java.io.IOException]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping the test as Rnumode is N]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping the test as Rnumode is N
at Tririga_TestScriptsPkg.Expire_An_ExistingLease_DueExpiration_Today.AddLandBuildingUnderBuilding(Expire_An_ExistingLease_DueExpiration_Today.java:57)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddLandBuildingUnderBuilding -->
        <test-method status="PASS" signature="aftreMethod()[pri:0, instance:Tririga_TestScriptsPkg.Expire_An_ExistingLease_DueExpiration_Today@7642df8f]" name="aftreMethod" is-config="true" duration-ms="7563" started-at="2020-01-02T18:02:36Z" finished-at="2020-01-02T18:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftreMethod -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:Tririga_TestScriptsPkg.Expire_An_ExistingLease_DueExpiration_Today@7642df8f]" name="afterSuite" is-config="true" duration-ms="46" started-at="2020-01-02T18:02:44Z" finished-at="2020-01-02T18:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- Tririga_TestScriptsPkg.Expire_An_ExistingLease_DueExpiration_Today -->
    </test> <!-- TEST -->
  </suite> <!-- Tririga Automation Regression -->
</testng-results>
